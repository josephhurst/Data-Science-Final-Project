{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Machine Learning\n",
    "We wanted to investigate which variables were most important in determining which mutual funds performed the best over the past 5 years. We compared several models to see which was most effective, then using that model we selected variables that were the most important in predicting the percentage change in the price of a mutual fund."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from altair import *\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.ensemble import RandomForestRegressor, AdaBoostRegressor, GradientBoostingRegressor\n",
    "from sklearn.linear_model import LinearRegression, Lasso, ElasticNet, Ridge\n",
    "from sklearn.svm import SVR\n",
    "from sklearn.model_selection import cross_val_score\n",
    "import numpy as np\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "data = pd.read_csv('/share/joe/finalData.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>beta3y</th>\n",
       "      <th>expRatio</th>\n",
       "      <th>inceptionDate</th>\n",
       "      <th>netAssetValue</th>\n",
       "      <th>symbol</th>\n",
       "      <th>turnover</th>\n",
       "      <th>yield</th>\n",
       "      <th>over1B</th>\n",
       "      <th>changeInPrice</th>\n",
       "      <th>Cash</th>\n",
       "      <th>...</th>\n",
       "      <th>Duration</th>\n",
       "      <th>US Goverment</th>\n",
       "      <th>AAA</th>\n",
       "      <th>AA</th>\n",
       "      <th>A</th>\n",
       "      <th>BBB</th>\n",
       "      <th>BB</th>\n",
       "      <th>B</th>\n",
       "      <th>Below B</th>\n",
       "      <th>Others</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2.12</td>\n",
       "      <td>1.47</td>\n",
       "      <td>2000</td>\n",
       "      <td>0.28966</td>\n",
       "      <td>BIPIX</td>\n",
       "      <td>13.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>False</td>\n",
       "      <td>3.382193</td>\n",
       "      <td>21.84</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2.12</td>\n",
       "      <td>2.47</td>\n",
       "      <td>2000</td>\n",
       "      <td>0.28966</td>\n",
       "      <td>BIPSX</td>\n",
       "      <td>13.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>False</td>\n",
       "      <td>3.216045</td>\n",
       "      <td>21.84</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2.44</td>\n",
       "      <td>1.47</td>\n",
       "      <td>1997</td>\n",
       "      <td>0.32090</td>\n",
       "      <td>UOPIX</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>False</td>\n",
       "      <td>4.548629</td>\n",
       "      <td>32.09</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2.44</td>\n",
       "      <td>2.47</td>\n",
       "      <td>1997</td>\n",
       "      <td>0.32090</td>\n",
       "      <td>UOPSX</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>False</td>\n",
       "      <td>4.330378</td>\n",
       "      <td>32.09</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2.43</td>\n",
       "      <td>1.80</td>\n",
       "      <td>2000</td>\n",
       "      <td>0.35047</td>\n",
       "      <td>RYVYX</td>\n",
       "      <td>114.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>False</td>\n",
       "      <td>4.559699</td>\n",
       "      <td>34.02</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 43 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   beta3y  expRatio  inceptionDate  netAssetValue symbol  turnover  yield  \\\n",
       "0    2.12      1.47           2000        0.28966  BIPIX      13.0    0.0   \n",
       "1    2.12      2.47           2000        0.28966  BIPSX      13.0    0.0   \n",
       "2    2.44      1.47           1997        0.32090  UOPIX       6.0    0.0   \n",
       "3    2.44      2.47           1997        0.32090  UOPSX       6.0    0.0   \n",
       "4    2.43      1.80           2000        0.35047  RYVYX     114.0    0.0   \n",
       "\n",
       "  over1B  changeInPrice   Cash   ...    Duration  US Goverment  AAA   AA    A  \\\n",
       "0  False       3.382193  21.84   ...         NaN           0.0  0.0  0.0  0.0   \n",
       "1  False       3.216045  21.84   ...         NaN           0.0  0.0  0.0  0.0   \n",
       "2  False       4.548629  32.09   ...         NaN           0.0  0.0  0.0  0.0   \n",
       "3  False       4.330378  32.09   ...         NaN           0.0  0.0  0.0  0.0   \n",
       "4  False       4.559699  34.02   ...         NaN           0.0  0.0  0.0  0.0   \n",
       "\n",
       "   BBB   BB    B  Below B  Others  \n",
       "0  0.0  0.0  0.0      0.0     0.0  \n",
       "1  0.0  0.0  0.0      0.0     0.0  \n",
       "2  0.0  0.0  0.0      0.0     0.0  \n",
       "3  0.0  0.0  0.0      0.0     0.0  \n",
       "4  0.0  0.0  0.0      0.0     0.0  \n",
       "\n",
       "[5 rows x 43 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "stock_prices = pd.read_csv(\"/share/joe/stockPrices.csv\", index_col='date')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "cutoff = '2015-01-01'\n",
    "before = stock_prices.loc[cutoff]/stock_prices.loc['2012-06-01']\n",
    "before = before.reset_index()\n",
    "before.columns = ['symbol', 'before2015']\n",
    "after = stock_prices.loc['2017-06-01']/stock_prices.loc[cutoff]\n",
    "after = after.reset_index()\n",
    "after.columns = ['symbol', 'after2015']\n",
    "after = after.replace([np.inf, -np.inf], np.nan).dropna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "data = after.merge(before, on='symbol').merge(data, on='symbol')\n",
    "data = data.drop(['changeInPrice', '3 Year Earnings Growth', 'symbol'], axis=1).fillna(0)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Next we compared some different machine learning models to see which performed best on our data. We measured model performance by mean square error."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def test_model(model, data=data):\n",
    "    \"\"\"Calculates the mean and root mean square training and test error for a model\n",
    "    Args:\n",
    "        model (sklearn model)\n",
    "        data (pandas dataframe)\n",
    "    Returns:\n",
    "        A dataframe with the training and test MSE and RMSE\n",
    "    \"\"\"\n",
    "    X = data.drop(['after2015'], axis=1).fillna(0)\n",
    "    y = data['after2015']\n",
    "    model.fit(X, y)\n",
    "    train_test = pd.DataFrame({\n",
    "        'train':[((model.predict(X) - y) ** 2).mean()],\n",
    "        'test': [-cross_val_score(model, X, y, cv=15, scoring='neg_mean_squared_error').mean()]\n",
    "    })\n",
    "    train_test = pd.concat([train_test, np.sqrt(train_test)])\n",
    "    train_test.index = ['mse', 'rmse']\n",
    "    return train_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>test</th>\n",
       "      <th>train</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>mse</th>\n",
       "      <td>0.008822</td>\n",
       "      <td>0.005657</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>rmse</th>\n",
       "      <td>0.093928</td>\n",
       "      <td>0.075216</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          test     train\n",
       "mse   0.008822  0.005657\n",
       "rmse  0.093928  0.075216"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_model(LinearRegression())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>test</th>\n",
       "      <th>train</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>mse</th>\n",
       "      <td>0.008758</td>\n",
       "      <td>0.005658</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>rmse</th>\n",
       "      <td>0.093582</td>\n",
       "      <td>0.075219</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          test     train\n",
       "mse   0.008758  0.005658\n",
       "rmse  0.093582  0.075219"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_model(Ridge())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>test</th>\n",
       "      <th>train</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>mse</th>\n",
       "      <td>0.013628</td>\n",
       "      <td>0.011235</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>rmse</th>\n",
       "      <td>0.116739</td>\n",
       "      <td>0.105997</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          test     train\n",
       "mse   0.013628  0.011235\n",
       "rmse  0.116739  0.105997"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_model(ElasticNet())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>test</th>\n",
       "      <th>train</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>mse</th>\n",
       "      <td>0.006256</td>\n",
       "      <td>0.000472</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>rmse</th>\n",
       "      <td>0.079096</td>\n",
       "      <td>0.021716</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          test     train\n",
       "mse   0.006256  0.000472\n",
       "rmse  0.079096  0.021716"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_model(RandomForestRegressor())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>test</th>\n",
       "      <th>train</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>mse</th>\n",
       "      <td>0.006416</td>\n",
       "      <td>0.001222</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>rmse</th>\n",
       "      <td>0.080102</td>\n",
       "      <td>0.034956</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          test     train\n",
       "mse   0.006416  0.001222\n",
       "rmse  0.080102  0.034956"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_model(GradientBoostingRegressor())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In order to see which variable was the most predictive of the percentage gain of a mutual fund, we trained our model on only one variable and left the others out and checked which removed variables caused the test error to drop the most by themselves."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "before2015\n",
      "beta3y\n",
      "expRatio\n",
      "inceptionDate\n",
      "netAssetValue\n",
      "turnover\n",
      "yield\n",
      "over1B\n",
      "Cash\n",
      "Stocks\n",
      "Bonds\n",
      "otherAssets\n",
      "Preferred\n",
      "Convertable\n",
      "Basic Materials\n",
      "Consumer Cyclical\n",
      "Financial Services\n",
      "Realestate\n",
      "Consumer Defensive\n",
      "Healthcare\n",
      "Utilities\n",
      "Communication Services\n",
      "Energy\n",
      "Industrials\n",
      "Technology\n",
      "Price/Earnings\n",
      "Price/Book\n",
      "Price/Sales\n",
      "Price/Cashflow\n",
      "Median Market Cap\n",
      "Maturity\n",
      "Duration\n",
      "US Goverment\n",
      "AAA\n",
      "AA\n",
      "A\n",
      "BBB\n",
      "BB\n",
      "B\n",
      "Below B\n",
      "Others\n"
     ]
    }
   ],
   "source": [
    "dfs = []\n",
    "for var in data.drop('after2015', axis = 1).columns:\n",
    "    print(var)\n",
    "    X_with = data[[var, 'after2015']]\n",
    "    df = test_model(GradientBoostingRegressor(), data=X_with)\n",
    "    dfs.append(pd.DataFrame({\n",
    "                var: list(df.loc['mse'])\n",
    "            }))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# Gather the training and test error values into a dataframe\n",
    "values = pd.concat(dfs, axis=1).transpose()\n",
    "values.columns = ['test', 'train']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f4c84f910b8>"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f4c84f8ccf8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "values.sort_values(by='test').head(10).plot(kind='bar')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f4c82f4f0f0>"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nPbEAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f4c85000860>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "values.sort_values(by='test').plot(kind='bar')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In the above analysis, we see that the top 10 most predictive variables are all related to the asset makeup of the fund (yield doesn't seem directly related to the asset makeup, but funds with bonds will have a much higher yield than funds with mostly stocks). Since these asset percentage variables are all highly related to each other (the more health care stock you have the less stock you can have from other industries), they may contain very simmilar information. We wanted to account for this, so we took out each variable and left the others in and checked which removed variables caused the test error to increase the most."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "before2015\n",
      "beta3y\n",
      "expRatio\n",
      "inceptionDate\n",
      "netAssetValue\n",
      "turnover\n",
      "yield\n",
      "over1B\n",
      "Cash\n",
      "Stocks\n",
      "Bonds\n",
      "otherAssets\n",
      "Preferred\n",
      "Convertable\n",
      "Basic Materials\n",
      "Consumer Cyclical\n",
      "Financial Services\n",
      "Realestate\n",
      "Consumer Defensive\n",
      "Healthcare\n",
      "Utilities\n",
      "Communication Services\n",
      "Energy\n",
      "Industrials\n",
      "Technology\n",
      "Price/Earnings\n",
      "Price/Book\n",
      "Price/Sales\n",
      "Price/Cashflow\n",
      "Median Market Cap\n",
      "Maturity\n",
      "Duration\n",
      "US Goverment\n",
      "AAA\n",
      "AA\n",
      "A\n",
      "BBB\n",
      "BB\n",
      "B\n",
      "Below B\n",
      "Others\n"
     ]
    }
   ],
   "source": [
    "dfs = []\n",
    "for var in data.drop('after2015', axis = 1).columns:\n",
    "    print(var)\n",
    "    X_without = data.drop(var, axis=1)\n",
    "    df = test_model(GradientBoostingRegressor(), data=X_without)\n",
    "    dfs.append(pd.DataFrame({\n",
    "                var: list(df.loc['mse'])\n",
    "            }))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# Gather the training and test error values into a dataframe\n",
    "values = pd.concat(dfs, axis=1).transpose()\n",
    "values.columns = ['test', 'train']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f4c82d48cf8>"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYQAAAFSCAYAAADy2qjhAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAIABJREFUeJzt3Xm4nWV97vHvTUDCJCBEHIImQkQCMgbEoXqQyqAWpAUF\nRG1F8FKc6nGAVlGp9OBxoliBomAtiICgNmUWAcEjEBJkCkOJghKpGhAQwYDAff54nh1WNjvJJsl+\n3uXa9+e6cmW97xre30r2Xr/1TL9HtomIiFil6wAiIqI/JCFERASQhBAREVUSQkREAEkIERFRJSFE\nRASQhBAREVUSQkREAEkIERFRrdp1AE/Hhhtu6ClTpnQdRkTEn405c+bcY3vSaB77Z5UQpkyZwuzZ\ns7sOIyLiz4akX4z2sekyiogIIAkhIiKqJISIiAD+zMYQIiKerj/96U/Mnz+fhQsXdh3KmJo4cSKT\nJ09mtdVWW+7XSEKIiIE2f/581llnHaZMmYKkrsMZE7a59957mT9/PlOnTl3u10mXUUQMtIULF7LB\nBhsMbDIAkMQGG2ywwq2gJISIGHiDnAyGrIz3mIQQERHAgI0hTDns3KXef+fRb2gUSUT0q2V9Tjxd\ny/pcuf/++znttNN473vf+7Rf+5hjjuGQQw5hzTXXXN7wnpa0ECIixtD999/Pcccdt1zPPeaYY3j4\n4YdXckRLNlAthIiIfnPYYYfxs5/9jG222YbXve51PPvZz+bMM8/kkUceYe+99+Yzn/kMDz30EG9+\n85uZP38+jz/+OJ/85Cf5zW9+w913383OO+/MhhtuyKWXXjrmsSYhRESMoaOPPpqbbrqJ6667josu\nuoizzjqLWbNmYZs999yTyy+/nAULFvC85z2Pc88t3VkPPPAA6667Ll/60pe49NJL2XDDDZvEmi6j\niIhGLrroIi666CK23XZbtttuO2699VZuv/12XvrSl3LxxRfz8Y9/nCuuuIJ11123k/jSQoiIaMQ2\nhx9+OO9+97ufct+cOXM477zzOPzww9l111054ogjmseXFkJExBhaZ511ePDBBwHYbbfdOPnkk/nD\nH/4AwK9+9St++9vfcvfdd7Pmmmty4IEH8pGPfIRrr732Kc9tIS2EiBhXWk8/32CDDXjlK1/Jlltu\nyR577MEBBxzAy1/+cgDWXnttTj31VObNm8dHP/pRVlllFVZbbTWOP/54AA455BD22GMPnvvc5zYZ\nVJbtMb/IyjJjxgwvbYOcrEOIiOFuueUWNt98867DaGKk9yppju0Zo3l+uowiIgJIQoiIiCoJISIi\ngCSEiIiokhAiIgJIQoiIiCrrECJifPn0Si4L8ekHlnr38pa/fv3rX89pp53GeuuttyLRPS2jaiFI\n2l3SbZLmSTpshPtXl3RGvf9qSVN67ju8nr9N0m495/9e0lxJN0n6tqSJK+MNRUT0kyWVv3788ceX\n+rzzzjuvaTKAUSQESROArwJ7ANOB/SVNH/awg4D7bG8KfBn4XH3udGA/YAtgd+A4SRMkPR/4ADDD\n9pbAhPq4iIiB0lv+eocddmDnnXfmgAMO4KUvfSkAb3rTm9h+++3ZYostOPHEExc9b8qUKdxzzz3c\neeedbL755hx88MFsscUW7Lrrrvzxj38ck1hH00LYEZhn++e2HwVOB/Ya9pi9gG/W22cBu6hs8LkX\ncLrtR2zfAcyrrwelu2oNSasCawJ3r9hbiYjoP0cffTSbbLIJ1113HZ///OeZNWsWRx11FDfffDMA\nJ598MnPmzGH27Nkce+yx3HvvvU95jdtvv51DDz2UuXPnst5663H22WePSayjSQjPB+7qOZ5fz434\nGNuPAQ8AGyzpubZ/BXwB+CXwP8ADti8a6eKSDpE0W9LsBQsWjCLciIj+teOOOzJ16tRFx8ceeyxb\nb701O+20E3fddRe33377U54zdepUttlmGwC233577rzzzjGJbTQJQSOcG14AaUmPGfG8pPUprYep\nwPOAtSQdONLFbZ9oe4btGZMmTRpFuBER/WuttdZadPuyyy7j4osv5sorr+T6669n2223ZeHChU95\nzuqrr77o9oQJE3jsscfGJLbRJIT5wMY9x5N5avfOosfULqB1gd8t5bl/Cdxhe4HtPwHfBV6xPG8g\nIqKfLa2E9QMPPMD666/Pmmuuya233spVV13VOLrFjWba6TXANElTgV9RBn8PGPaYmcA7gCuBfYBL\nbFvSTOA0SV+itASmAbOAJ4CdJK0J/BHYBVhyGdOIiJVlGdNEV7be8tdrrLEGG2200aL7dt99d044\n4QS22morNttsM3baaaemsQ23zIRg+zFJ7wMupMwGOtn2XElHArNtzwROAk6RNI/SMtivPneupDOB\nm4HHgENtPw5cLeks4Np6/qfAicOvHRExCE477bQRz6+++uqcf/75I943NE6w4YYbctNNNy06/5GP\n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\ngg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f4c82d4d668>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "values.sort_values(by='test', ascending = False).head(10).plot(kind='bar')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f4c88d89f28>"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f4c866c9908>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "values.sort_values(by='test', ascending = False).plot(kind='bar')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We sorted the variables by the test error the GradientBoostingRegressor had when they weren't included in the model. You can see that the most valuable variable was the technology variable, since when we removed technology the test mse was the highest. Second highest was the past performance of the fund. Whether a fund contained high-performing sectors as well as how well it performed in the past was predictive of its performance over the past two and a half years."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f4c82c0ad68>"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYQAAAFSCAYAAADy2qjhAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAIABJREFUeJzt3Xm4nWV97vHvTUDCJCBEHIImQkQCMgbEoXqQyqAWpAUF\nRG1F8FKc6nGAVlGp9OBxoliBomAtiICgNmUWAcEjEBJkCkOJghKpGhAQwYDAff54nh1WNjvJJsl+\n3uXa9+e6cmW97xre30r2Xr/1TL9HtomIiFil6wAiIqI/JCFERASQhBAREVUSQkREAEkIERFRJSFE\nRASQhBAREVUSQkREAEkIERFRrdp1AE/Hhhtu6ClTpnQdRkTEn405c+bcY3vSaB77Z5UQpkyZwuzZ\ns7sOIyLiz4akX4z2sekyiogIIAkhIiKqJISIiAD+zMYQIiKerj/96U/Mnz+fhQsXdh3KmJo4cSKT\nJ09mtdVWW+7XSEKIiIE2f/581llnHaZMmYKkrsMZE7a59957mT9/PlOnTl3u10mXUUQMtIULF7LB\nBhsMbDIAkMQGG2ywwq2gJISIGHiDnAyGrIz3mIQQERHAgI0hTDns3KXef+fRb2gUSUT0q2V9Tjxd\ny/pcuf/++znttNN473vf+7Rf+5hjjuGQQw5hzTXXXN7wnpa0ECIixtD999/Pcccdt1zPPeaYY3j4\n4YdXckRLNlAthIiIfnPYYYfxs5/9jG222YbXve51PPvZz+bMM8/kkUceYe+99+Yzn/kMDz30EG9+\n85uZP38+jz/+OJ/85Cf5zW9+w913383OO+/MhhtuyKWXXjrmsSYhRESMoaOPPpqbbrqJ6667josu\nuoizzjqLWbNmYZs999yTyy+/nAULFvC85z2Pc88t3VkPPPAA6667Ll/60pe49NJL2XDDDZvEmi6j\niIhGLrroIi666CK23XZbtttuO2699VZuv/12XvrSl3LxxRfz8Y9/nCuuuIJ11123k/jSQoiIaMQ2\nhx9+OO9+97ufct+cOXM477zzOPzww9l111054ogjmseXFkJExBhaZ511ePDBBwHYbbfdOPnkk/nD\nH/4AwK9+9St++9vfcvfdd7Pmmmty4IEH8pGPfIRrr732Kc9tIS2EiBhXWk8/32CDDXjlK1/Jlltu\nyR577MEBBxzAy1/+cgDWXnttTj31VObNm8dHP/pRVlllFVZbbTWOP/54AA455BD22GMPnvvc5zYZ\nVJbtMb/IyjJjxgwvbYOcrEOIiOFuueUWNt98867DaGKk9yppju0Zo3l+uowiIgJIQoiIiCoJISIi\ngCSEiIiokhAiIgJIQoiIiCrrECJifPn0Si4L8ekHlnr38pa/fv3rX89pp53GeuuttyLRPS2jaiFI\n2l3SbZLmSTpshPtXl3RGvf9qSVN67ju8nr9N0m495/9e0lxJN0n6tqSJK+MNRUT0kyWVv3788ceX\n+rzzzjuvaTKAUSQESROArwJ7ANOB/SVNH/awg4D7bG8KfBn4XH3udGA/YAtgd+A4SRMkPR/4ADDD\n9pbAhPq4iIiB0lv+eocddmDnnXfmgAMO4KUvfSkAb3rTm9h+++3ZYostOPHEExc9b8qUKdxzzz3c\neeedbL755hx88MFsscUW7Lrrrvzxj38ck1hH00LYEZhn++e2HwVOB/Ya9pi9gG/W22cBu6hs8LkX\ncLrtR2zfAcyrrwelu2oNSasCawJ3r9hbiYjoP0cffTSbbLIJ1113HZ///OeZNWsWRx11FDfffDMA\nJ598MnPmzGH27Nkce+yx3HvvvU95jdtvv51DDz2UuXPnst5663H22WePSayjSQjPB+7qOZ5fz434\nGNuPAQ8AGyzpubZ/BXwB+CXwP8ADti8a6eKSDpE0W9LsBQsWjCLciIj+teOOOzJ16tRFx8ceeyxb\nb701O+20E3fddRe33377U54zdepUttlmGwC233577rzzzjGJbTQJQSOcG14AaUmPGfG8pPUprYep\nwPOAtSQdONLFbZ9oe4btGZMmTRpFuBER/WuttdZadPuyyy7j4osv5sorr+T6669n2223ZeHChU95\nzuqrr77o9oQJE3jsscfGJLbRJIT5wMY9x5N5avfOosfULqB1gd8t5bl/Cdxhe4HtPwHfBV6xPG8g\nIqKfLa2E9QMPPMD666/Pmmuuya233spVV13VOLrFjWba6TXANElTgV9RBn8PGPaYmcA7gCuBfYBL\nbFvSTOA0SV+itASmAbOAJ4CdJK0J/BHYBVhyGdOIiJVlGdNEV7be8tdrrLEGG2200aL7dt99d044\n4QS22morNttsM3baaaemsQ23zIRg+zFJ7wMupMwGOtn2XElHArNtzwROAk6RNI/SMtivPneupDOB\nm4HHgENtPw5cLeks4Np6/qfAicOvHRExCE477bQRz6+++uqcf/75I943NE6w4YYbctNNNy06/5GP\n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\ngg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f4c82c95ef0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "values.sort_values(by='test', ascending = False).head(10).plot(kind='bar')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We saved the data that we made this plot with for use in our presentation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "values.sort_values(by='test', ascending = False).to_csv('/share/joe/sectorError.csv')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
